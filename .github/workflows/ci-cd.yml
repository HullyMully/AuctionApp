name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: auction_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '1.29.2' # Указываем версию docker-compose

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew : build
      
    - name: Run tests
      run: ./gradlew : test

    - name: Start Docker Compose services
      run: docker-compose up --build -d

    - name: Wait for services to be healthy
      timeout-minutes: 5
      run: |
        echo "Waiting for app service on port 8081..."
        for i in $(seq 1 60); do
          curl -s http://localhost:8081/actuator/health > /dev/null && break
          echo "Waiting... $i"
          sleep 5
        done
        echo "App service is up."
        
        echo "Waiting for Keycloak service on port 8080..."
        for i in $(seq 1 60); do
          curl -s http://localhost:8080/realms/auction > /dev/null && break
          echo "Waiting... $i"
          sleep 5
        done
        echo "Keycloak service is up."

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Используйте актуальную версию Node.js

    - name: Install Newman
      run: npm install -g newman

    - name: Run Postman tests
      run: newman run api-tests/collection.postman_collection.json

    - name: Stop Docker Compose services
      if: always()
      run: docker-compose down

    - name: Build Docker image
      run: docker build -t kutalev-auction:${{ github.sha }} .
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Push Docker image
      run: |
        docker tag kutalev-auction:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/kutalev-auction:${{ github.sha }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kutalev-auction:${{ github.sha }} 